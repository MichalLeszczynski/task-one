AWSTemplateFormatVersion: '2010-09-09'
Description: 'Deploy task-one solution'

Parameters:
  BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Default: mleszczynsk-cloudformation-templates
    Type: String

Resources:
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: IAMFunctionPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - iam:CreateInstanceProfile
            - iam:DeleteInstanceProfile
            - iam:GetRole
            - iam:AddRoleToInstanceProfile
            - iam:RemoveRoleFromInstanceProfile
            - iam:CreateRole
            - iam:DeleteRole
            - iam:PutRolePolicy
            - iam:PassRole
            - iam:GetRolePolicy
            - iam:DeleteRolePolicy
            Resource: "*"
      - PolicyName: SSMFunctionPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - ssm:PutParameter
            - ssm:DeleteParameter
            Resource: "*"
      - PolicyName: EC2FunctionPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - ec2:AuthorizeSecurityGroupIngress
            - ec2:TerminateInstances
            - ec2:CreateTags
            - ec2:RunInstances
            - ec2:CreateSecurityGroup
            - ec2:CreateSnapshots
            - ec2:DeleteSecurityGroup
            - ec2:DescribeSecurityGroups
            - ec2:DescribeKeyPairs
            - ec2:DescribeInstances
            - ec2:CreateKeyPair
            - ec2:DeleteKeyPair
            - ec2:CreateSubnet
            - ec2:AssociateSubnetCidrBlock
            - ec2:DescribeSubnets
            - ec2:CreateSubnet
            - ec2:DeleteSubnet
            - ec2:CreateNetworkAcl
            - ec2:DeleteNetworkAcl
            - ec2:DescribeNetworkAcls
            - ec2:ReplaceNetworkAclAssociation
            - ec2:CreateNetworkAclEntry
            - ec2:DeleteNetworkAclEntry
            Resource: "*"
      - PolicyName: CFNFunctionPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - cloudformation:CreateStack
            - cloudformation:DescribeStacks
            - cloudformation:ListStacks
            - cloudformation:DeleteStack
            Resource: "*"
      - PolicyName: S3FunctionPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:CreateBucket
            - s3:DeleteBucket
            - s3:GetObject
            - s3:ListBucket
            Resource: "*"

  DeployFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Example
      Handler: main.handler
      Runtime: python3.9
      Role: !GetAtt 'FunctionRole.Arn'
      Timeout: 300
      Code: "./lambda_function"

  MyUrlFunctionPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DeployFunction
      Action: lambda:InvokeFunctionUrl
      Principal: "*"
      FunctionUrlAuthType: AWS_IAM

  MyFunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !Ref DeployFunction
      AuthType: AWS_IAM

Outputs:
  FunctionUrl:
    Description: Url to invoke deployed Function
    Value: !GetAtt MyFunctionUrl.FunctionUrl